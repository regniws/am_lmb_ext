
Функция ЗагрузитьДанные(Клиенты, Залоги, Вещи, Обезличенно) Экспорт
	
	Контекст = ИнтеграцияБИП.НовыйКонтекстИнтеграции();
	Контекст.Поставщик = Справочники.Организации.ПоставщикДанных();
	Контекст.СогласованноеСохранение = Ложь;
	
	СоответствиеФизлиц = Новый Соответствие();
	СоответствиеБилетов = Новый Соответствие();;
	
	Для Каждого СтрокаКвитанции Из Залоги Цикл
		
		Строка = ИнтеграцияБИП.Новый_ЗалоговыйБилет(Контекст, СтрокаКвитанции.ИдентификаторЗалога);
		
		Строка.Дата =  СтрокаКвитанции.Дата;
		Строка.Клиент = СтрокаКвитанции.Клиент;
		Строка.СуммаЗайма = СтрокаКвитанции.СуммаЗама;
		Строка.ДнейЗайма = СтрокаКвитанции.Срок;
		Строка.ПлановаяДатаВыкупа =СтрокаКвитанции.ДатаВыкупа;
		Строка.ИдентификаторКвитанции = СтрокаКвитанции.ИдентификаторЗалога;
		Строка.СтоимостьВещей = СтрокаКвитанции.Оценка;
		Строка.НомерДокумента = СтрокаКвитанции.Номер;
		
		СоответствиеБилетов.Вставить(Строка.ИдентификаторКвитанции, Строка);
		
	КонецЦикла;
	
	Для Каждого СтрокаФизлицо Из Клиенты Цикл
		
		Строка = ИнтеграцияБИП.Новый_Клиент(Контекст, СтрокаФизлицо.ИДКлиента);
		Строка.Идентификатор = СтрокаФизлицо.ИДКлиента;
		СоответствиеФизлиц.Вставить(Строка.Идентификатор, Строка);
		
		Если Обезличенно Тогда
			Продолжить;
		КонецЕсли;
		
		Строка.Фамилия = СтрокаФизлицо.Фамилия;
		Строка.Имя = СтрокаФизлицо.Имя;
		Строка.Отчество = СтрокаФизлицо.Отчество;
		Строка.ДатаРождения = СтрокаФизлицо.ДатаРождения;
		Строка.ТипДокумента = СтрокаФизлицо.ВидДокумента;
		Строка.СерияДокумента = СтрокаФизлицо.СерияПаспорта;
		Строка.НомерДокумента = СтрокаФизлицо.НомерПаспорта;
		Строка.КодПодразделения = СтрокаФизлицо.КодПодразделения;
		Строка.ДатаВыдачи = СтрокаФизлицо.ДатаВыдачи;
		Строка.КемВыдан = СтрокаФизлицо.КемВыдан;
		Строка.Национальность = СтрокаФизлицо.Гражданство;;
		Строка.АдресКлиента = СтрокаФизлицо.АдресКлиента;
		Строка.Идентификатор = СтрокаФизлицо.ИДКлиента;
		
	КонецЦикла;
	
	Для Каждого СтрокаПартии Из Вещи Цикл
		
		Строка = ИнтеграцияБИП.Новый_ПартияИзделийПолная(Контекст, СтрокаПартии.ИдентификаторВещи);
		Строка.Идентификатор = СтрокаПартии.ИдентификаторВещи;
		Строка.Наименование = СтрокаПартии.Наименование;
		Строка.Описание = СтрокаПартии.Наименование;
		Строка.ВидПартии = "JEWERLY";
		Строка.ТипИзделия = "JS_OTHER";
		Строка.ЭтапОбработки = "PAWNSHOP";
		Строка.СтадияОбработки = "STORED";
		Строка.ОКПД2 = СтрокаПартии.ОКПД2;
		Строка.Количество = 1;
		Строка.ОбщийВес = СтрокаПартии.ОбщийВес;
		Строка.ВесМеталла = СтрокаПартии.ЧистыйВес;
		Строка.ОсновнойМеталл = ОбщегоНазначения.ИмяЗначенияПеречисления(СтрокаПартии.Металл);
		Строка.Проба = СтрокаПартии.Проба;
		Строка.ТипСтоимости = "P_REPORTEDVALUE";
		Строка.Цена = СтрокаПартии.Оценка;
		
		СоответствиеБилетов[СтрокаПартии.ИдентификаторЗалога].Описание =
			СоответствиеБилетов[СтрокаПартии.ИдентификаторЗалога].Описание
			+ СтрокаПартии.Наименование + "; ";
		
		СтрокаВещи = ИнтеграцияБИП.НовыйВложенный_СписокИдентификаторовПартий(
			СоответствиеБилетов[СтрокаПартии.ИдентификаторЗалога].Вещи);
		
		СтрокаВещи.Партия = Строка.Идентификатор;
		
	КонецЦикла;
	
	МодульЛогБИП = ОбщегоНазначения.ОбщийМодуль("ЛогБИП");
	
	Лог = МодульЛогБИП.НовыйКонтекстЛогирования();
	Лог.Хранение.ОперативнаяПамять = Истина;
	
	Отказ = Ложь;
	
	Результат = Новый Структура("Результат, Описание", Истина, "");
	
	Попытка
		ИнтеграцияБИП.Сохранить(Контекст, Лог, Отказ);
	Исключение
		Результат.Результат = Ложь;
		//@skip-warning
		Результат.Описание = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("ЛогБИП.Ошибка",,,,Результат.Описание);
	КонецПопытки;
	
	Если Отказ Тогда
		Результат.Результат = Ложь;
		СообщенияОшибок = Новый Массив;
		Для Каждого о Из Лог.Хранение.МассивСообщений Цикл
			СообщенияОшибок.Добавить(""+о.Дата+ " - " + о.Уровень + " - " + о.Сообщение);
		КонецЦикла;
		Результат.Описание = СтрСоединить(СообщенияОшибок, Символы.ПС);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции